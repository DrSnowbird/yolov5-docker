# Start FROM Nvidia PyTorch image https://ngc.nvidia.com/catalog/containers/nvidia:pytorch
#FROM nvcr.io/nvidia/pytorch:22.10-py3
#FROM python:3.8.8
FROM openkbs/python-nonroot-docker
#FROM pytorch/pytorch:1.12.1-cuda11.3-cudnn8-runtime

MAINTAINER DrSnowbird "DrSnowbird@openkbs.org"

##############################################
#### ---- Installation Directories   ---- ####
##############################################
ENV INSTALL_DIR=${INSTALL_DIR:-/usr}
ENV SCRIPT_DIR=${SCRIPT_DIR:-$INSTALL_DIR/scripts}

############################################
##### ---- System: certificates : ---- #####
##### ---- Corporate Proxy      : ---- #####
############################################
COPY ./scripts ${SCRIPT_DIR}
COPY certificates /certificates
RUN ${SCRIPT_DIR}/setup_system_certificates.sh
RUN ${SCRIPT_DIR}/setup_system_proxy.sh

###############################
#### ---- App: (ENV)  ---- ####
###############################
USER ${USER:-developer}
WORKDIR ${HOME:-/home/developer}

ENV APP_HOME=${APP_HOME:-$HOME/app}
ENV APP_MAIN=${APP_MAIN:-$HOME/setup.sh}
ENV PATH=${HOME}/.local/bin:${PATH}

RUN python -u -m pip install --upgrade pip

###############################
#### ---- App Setup:  ---- ####
###############################
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
#ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64
#VOLUMES_LIST="/usr/local/cuda/lib64:/usr/local/cuda/lib64 /usr/local/cudnn/lib64:/usr/local/cudnn/lib64 

COPY --chown=$USER:$USER ./requirements.txt ${HOME}
RUN if [ -s ${HOME}/requirements.txt ]; then \
        pip install --no-cache-dir --user -r ${HOME}/requirements.txt ; \
    fi; 

#################################
#### ---- App: (common) ---- ####
#################################
RUN mkdir -p ${APP_HOME} && sudo chown -R $USER:$USER ${APP_HOME} && ls -al ${HOME} ${APP_HOME}
RUN ls -al ${APP_HOME} && if [ -s ${APP_HOME} ]; then cp -r ${APP_HOME}/* ${HOME}/ ; fi && rm -f ${APP_HOME}/*
RUN ls -al ${HOME}
WORKDIR ${APP_HOME}

## Option-1: static yolov5 code
#COPY --chown=$USER:$USER app ${APP_HOME}
## Option-2: on-demain yolov5 code
## (optional-not safe: disable GIT SSL VERIFY)
# RUN GIT_SSL_NO_VERIFY=true git clone https://github.com/DrSnowbird/yolov5.git ${APP_HOME} && ls -al ${APP_HOME}
RUN git clone https://github.com/DrSnowbird/yolov5.git ${APP_HOME} && ls -al ${APP_HOME}
#RUN git clone https://github.com/ultralytics/yolov5.git ${APP_HOME} && ls -al ${APP_HOME}

RUN if [ -s ${APP_HOME}/requirements.txt ]; then \
        python -m pip install --upgrade pip ; \
        pip3 install --no-cache-dir --user -r ${APP_HOME}/requirements.txt ; \
        pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116 ; \
    fi; 

#### ---
RUN sudo apt-get update -y && sudo apt-get -y install libglib2.0-0 libgl1-mesa-glx
# PyTorch+cuda: https://pytorch.org/get-started/locally/

# Install linux packages
#RUN sudo apt update -y && sudo apt install -y vim zip htop screen libgl1-mesa-glx
#RUN pip uninstall -y nvidia-tensorboard nvidia-tensorboard-plugin-dlprof

#####################################
##### ---- user: developer ---- #####
#####################################
WORKDIR ${APP_HOME}
USER ${USER}

#############################################
#############################################
#### ---- App: (Customization here) ---- ####
#############################################
#############################################
#### (you customization code here!) #########
COPY --chown=$USER:$USER run-detect.sh ${APP_HOME}
#COPY --chown=$USER:$USER ./requirements.txt ${HOME}
#RUN if [ -s ${HOME}/requirements.txt ]; then \
#        pip install --no-cache-dir --user -r ${HOME}/requirements.txt ; \
#    fi; 


# Default run-detect.sh (It will detect the existence of ./customized/run-detect.sh, then run it instead)
#CMD ["/usr/src/app/run-detect.sh"]
CMD ["/home/developer/app/run-detect.sh"]
