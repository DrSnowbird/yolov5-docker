version: '3.3' 

services:
  {{CONTAINER_NAME}}:
    container_name: {{CONTAINER_NAME}}
    image: {{ORG_NAME}}/{{CONTAINER_NAME}}
    build:
      context: .
      dockerfile: Dockerfile
    #restart: always
    user: "1000:1000"
    env_file:
      - ./.env
    environment:
      - CONTAINER_NAME={{CONTAINER_NAME}}
      - USER_ID=${USER_ID:-1000}
      - GROUP_ID=${GROUP_ID:-1000}
      # - APP_HOME=${APP_HOME:-/home/developer/app}
      # - APP_MAIN=${APP_MAIN:-setup.sh}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP:-{{DOCKER_HOST_IP}}}
      - DOCKER_HOST_NAME=${DOCKER_HOST_NAME:-{{DOCKER_HOST_NAME}}}
      # ==== X11 Use only ====
      #- DISPLAY=$DISPLAY
      #- DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket
      # ==== vnc/no-vnc ====
      #- WINDOW_MANAGER=xfce 
      #- VNC_RESOLUTION=1280x800 
      #- VNC_PW=vncpassword 
    volumes:
      ## ==== Common mapping: ====
      #- /etc/hosts:/etc/hosts
      #- /dev/shm:/dev/shm
      #- /tmp/.X11-unix:/tmp/.X11-unix
      #- /var/run/docker.sock:/var/run/docker.sock
      #- ./certificates:/home/developer/certificates
      ## ==== Use $HOME/data-docker as base directory: ====
      #- $HOME/data-docker/{{CONTAINER_NAME}}/data:/home/developer/data
      #- $HOME/data-docker/{{CONTAINER_NAME}}/workspace:/home/developer/workspace
      ## ==== Use current directory as for mapping Volumes: ====
      ## (You need to manually create those child directory: ./data, ./workspace, and others)
      #- ./data:/home/developer/data
      #- ./workspace:/home/developer/workspace
      ## ==== App's additional mapping Volumes: ====
      #{{MORE_VOLUMES_MAPPING}}
    links:
      - yolov5-mongo
    ## -------------------------------
    ## -- Change to your specific port
    ## -------------------------------
    # ports:
    #   - "12345:12345"
    #{{PORTS_MAPPING}}
    ## -----------------------------
    ## -- Network setup if needed --
    ## -----------------------------
    # networks:
    #  - dev_network

  yolov5-fileserver:
    image: openkbs/jetty-fileserver
    #build:
    #  context: .
    #  dockerfile: Dockerfile
    container_name: yolov5-fileserver
    restart: always
    user: "1000:1000"
    environment:
      - USER_ID=${USER_ID:-1000}
      - GROUP_ID=${GROUP_ID:-1000}
    env_file:
      - .env
    ports:
      - 18882:8080
    volumes:
      - ./runs:/home/developer/jetty_base

  yolov5-mongo:
    image: mongo:latest
    container_name: yolov5-mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
      MONGODB_AUTH_DATABASE: admin
    ports:
      - 27027:27017
    #command: --smallfiles 
    volumes:
      - type: volume
        source: yolov5-mongodb_data_volume
        target: /data/db


  yolov5-mongo-express:
    image: mongo-express
    container_name: yolov5-mongo-express
    restart: always
    ports:
      - "28082:8081"
    environment:
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_SERVER: yolov5-mongo
      ME_CONFIG_MONGODB_PORT: "27017"
      #ME_CONFIG_BASICAUTH_USERNAME: admin
      #ME_CONFIG_BASICAUTH_PASSWORD: changeme
      #ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongoadmin
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongoadmin
      ME_CONFIG_MONGODB_URL: mongodb://mongoadmin:mongoadmin@yolov5-mongo:27017/
    depends_on:
      - yolov5-mongo
    links:
      - yolov5-mongo

volumes:
  yolov5-mongodb_data_volume:
    # driver: local 

#volumes:
#    {{CONTAINER_NAME}}_volume:
#        external: false

#networks:
#  dev_network:
#    external:
#      name: dev_network


